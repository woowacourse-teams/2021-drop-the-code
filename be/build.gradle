plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.2.0"
    id 'java'
}

group = 'com.wootech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtensions
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // log
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor { // 1
    configurations 'asciidoctorExtensions'
    // 문서화되는 과정을 로그로 보여준다
    logDocuments true
    // 입력 값으로 snippets 디렉토리 설정하기
    inputs.dir snippetsDir
    attributes 'docs': file('src/docs/asciidoc')
    // task를 test task에 의존하게 만들어 문서가 생성되기 전에 테스트가 실행된다
    dependsOn test
}

task copyDocument(type: Copy) { // 2
    dependsOn asciidoctor
    // 추후 추가
    from file("build/generated-snippets/controllerName")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
